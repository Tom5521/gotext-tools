@startuml
namespace parse {
    class MoParser << (S,Aquamarine) >> {
        - data []byte
        - filename string
        - errors []error

        - genBasics() (*bytes.Reader, binary.ByteOrder, error)
        - makeEntries(r *bytes.Reader, header *moHeader, msgIDStart []u32, msgIDLen []u32, msgStrStart []i32, msgStrLen []i32) po.Entries

        + Error() error
        + Errors() []error
        + Parse() *po.File

    }
    class PoConfig << (S,Aquamarine) >> {
        - lastCfg any

        + IgnoreComments bool
        + IgnoreAllComments bool
        + Logger *log.Logger
        + SkipHeader bool
        + CleanDuplicates bool

        + RestoreLastCfg() 
        + ApplyOptions(opts ...PoOption) 

    }
    class PoParser << (S,Aquamarine) >> {
        - data []byte
        - filename string
        - errors []error

        + Config PoConfig

        + Error() error
        + Errors() []error
        + ParseWithOptions(opts ...PoOption) *po.File
        + Parse() *po.File

    }
    class entry << (S,Aquamarine) >> {
        + Tokens []lexer.Token
        + Context []string
        + ID []string
        + Str []string
        + MsgidPlural []string
        + Plurals []pluralEntries

    }
    class moHeader << (S,Aquamarine) >> {
        + MajorVersion u16
        + MinorVersion u16
        + MsgIDCount u32
        + MsgIDOffset u32
        + MsgStrOffset u32
        + HashSize u32
        + HashOffset u32

    }
    class parse.PoOption << (T, #FF7700) >>  {
    }
    class parse.i32 << (T, #FF7700) >>  {
    }
    class parse.i64 << (T, #FF7700) >>  {
    }
    class parse.u16 << (T, #FF7700) >>  {
    }
    class parse.u32 << (T, #FF7700) >>  {
    }
    class pluralEntries << (S,Aquamarine) >> {
        + ID int
        + Str []string

    }
    class poFile << (S,Aquamarine) >> {
        + Entries []entry

    }
}


"__builtin__.int32" #.. "parse.i32"
"__builtin__.int64" #.. "parse.i64"
"__builtin__.uint16" #.. "parse.u16"
"__builtin__.uint32" #.. "parse.u32"
"parse.<font color=blue>func</font>(*PoConfig) " #.. "parse.PoOption"
@enduml
