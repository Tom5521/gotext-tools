@startuml
namespace parse {
    class MoConfig << (S,Aquamarine) >> {
        - lastCfg any

        + Logger *log.Logger
        + Endianness Endianness

        + RestoreLastCfg() 
        + ApplyOptions(opts ...MoOption) 

    }
    class MoParser << (S,Aquamarine) >> {
        - data []byte
        - filename string
        - errors []error

        + Config MoConfig

        - error(format string, a ...any) 
        - genBasics(reader *bytes.Reader) (binary.ByteOrder, error)
        - makeEntries(r *bytes.Reader, header *util.MoHeader, msgIDStart []u32, msgIDLen []u32, msgStrStart []i32, msgStrLen []i32) po.Entries

        + Error() error
        + Errors() []error
        + ParseWithOptions(opts ...MoOption) *po.File
        + Parse() *po.File

    }
    class PoConfig << (S,Aquamarine) >> {
        - lastCfg any
        - markAllAsObsolete bool

        + IgnoreComments bool
        + IgnoreAllComments bool
        + Logger *log.Logger
        + Verbose bool
        + SkipHeader bool
        + CleanDuplicates bool
        + ParseObsoletes bool
        + UseCustomObsoletePrefix bool
        + CustomObsoletePrefix rune

        + RestoreLastCfg() 
        + ApplyOptions(opts ...PoOption) 

    }
    class PoParser << (S,Aquamarine) >> {
        - originalData []byte
        - data []byte
        - filename string
        - errors []error
        - warns []error

        + Config PoConfig

        - error(format string, a ...any) 
        - warn(format string, a ...any) 
        - parseObsoleteEntries(tokens []lexer.Token) po.Entries

        + Error() error
        + Warnings() []error
        + Errors() []error
        + ParseWithOptions(opts ...PoOption) *po.File
        + Parse() *po.File

    }
    class parse.Endianness << (T, #FF7700) >>  {
    }
    class parse.MoOption << (T, #FF7700) >>  {
    }
    class parse.PoOption << (T, #FF7700) >>  {
    }
    class parse.i32 << (T, #FF7700) >>  {
    }
    class parse.i64 << (T, #FF7700) >>  {
    }
    class parse.u32 << (T, #FF7700) >>  {
    }
    class "util.Endianness" as utilEndianness {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}


"__builtin__.int32" #.. "parse.i32"
"__builtin__.int64" #.. "parse.i64"
"__builtin__.uint32" #.. "parse.u32"
"parse.<font color=blue>func</font>(*MoConfig) " #.. "parse.MoOption"
"parse.<font color=blue>func</font>(*PoConfig) " #.. "parse.PoOption"
"parse.utilEndianness" #.. "parse.Endianness"
@enduml
