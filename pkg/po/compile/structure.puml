@startuml
namespace compile {
    class HighlightCSSProperties << (S,Aquamarine) >> {
        + Color hcolor
        + BackgroundColor hcolor
        + FontWeight HighlightFontWeight
        + FontStyle HighlightFontStyle
        + TextDecoration HighlightTextDecoration

    }
    interface HighlightColor  {
        + Sprint( ...any) string
        + Sprintf( string,  ...any) string

    }
    class MoCompiler << (S,Aquamarine) >> {
        + File *po.File
        + Config MoConfig

        - info(format string, a ...any) 
        - error(format string, a ...any) error
        - writeTo(writer io.Writer) error

        + SetFile(f *po.File) 
        + ToWriterWithOptions(w io.Writer, opts ...MoOption) error
        + ToBytesWithOptions(options ...MoOption) []byte
        + ToFileWithOptions(f string, options ...MoOption) error
        + ToWriter(w io.Writer) error
        + ToFile(f string) error
        + ToBytes() []byte

    }
    class MoConfig << (S,Aquamarine) >> {
        - lastCfg any

        + Logger *log.Logger
        + Force bool
        + Verbose bool
        + IgnoreErrors bool
        + Endianness Endianness
        + HashTable bool
        + DepureEntries bool
        + SortEntries bool

        + ApplyOptions(opts ...MoOption) 
        + RestoreLastCfg() 

    }
    class PoCompiler << (S,Aquamarine) >> {
        - nplurals uint
        - header po.Header

        + File *po.File
        + Config PoConfig

        - error(format string, a ...any) error
        - info(format string, a ...any) 
        - init() 
        - writeHeader(w io.Writer) 
        - fprintfln(w io.Writer, e po.Entry, format string, args ...any) 
        - writeComment(w io.Writer, e po.Entry) 
        - formatMultiline(str string) string
        - processWordWrap(builder *strings.Builder, str string) 
        - formatMsgstr(i string) string
        - formatMsgid(i string) string
        - writeEntry(w io.Writer, e po.Entry) 
        - formatPrefixAndSuffix(id string) string

        + SetFile(f *po.File) 
        + ToWriterWithOptions(w io.Writer, opts ...PoOption) error
        + ToStringWithOptions(opts ...PoOption) string
        + ToFileWithOptions(f string, opts ...PoOption) error
        + ToBytesWithOptions(opts ...PoOption) []byte
        + ToWriter(w io.Writer) error
        + ToFile(f string) error
        + ToString() string
        + ToBytes() []byte

    }
    class PoConfig << (S,Aquamarine) >> {
        - lastCfg any

        + Logger *log.Logger
        + ForcePo bool
        + OmitHeader bool
        + PackageName string
        + CopyrightHolder string
        + ForeignUser bool
        + Title string
        + NoLocation bool
        + AddLocation PoLocationMode
        + MsgstrPrefix string
        + MsgstrSuffix string
        + IgnoreErrors bool
        + Verbose bool
        + CommentFuzzy bool
        + ManageHeader bool
        + HeaderComments bool
        + HeaderFields bool
        + CleanDuplicates bool
        + WordWrap bool
        + HeaderConfig *po.HeaderConfig
        + UseCustomObsoletePrefix bool
        + CustomObsoletePrefixRune rune
        + Highlight CSSClassesHighlighting

        + ApplyOptions(opts ...PoOption) 
        + RestoreLastCfg() 
        + Validate() error

    }
    class compile.CSSClassesHighlighting << (T, #FF7700) >>  {
    }
    class compile.Endianness << (T, #FF7700) >>  {
    }
    class compile.HighlightFontStyle << (T, #FF7700) >>  {
    }
    class compile.HighlightFontWeight << (T, #FF7700) >>  {
    }
    class compile.HighlightTextDecoration << (T, #FF7700) >>  {
    }
    class compile.MoOption << (T, #FF7700) >>  {
    }
    class compile.PoLocationMode << (T, #FF7700) >>  {
    }
    class compile.PoOption << (T, #FF7700) >>  {
    }
    class compile.hcolor << (T, #FF7700) >>  {
    }
    class compile.properties << (T, #FF7700) >>  {
    }
    class compile.u32 << (T, #FF7700) >>  {
    }
    class "util.Endianness" as utilEndianness {
        'This class was created so that we can correctly have an alias pointing to this name. Since it contains dots that can break namespaces
    }
}


"__builtin__.int" #.. "compile.HighlightFontStyle"
"__builtin__.int" #.. "compile.HighlightFontWeight"
"__builtin__.int" #.. "compile.HighlightTextDecoration"
"__builtin__.string" #.. "compile.PoLocationMode"
"__builtin__.uint32" #.. "compile.u32"
"compile.<font color=blue>func</font>(*MoConfig) " #.. "compile.MoOption"
"compile.<font color=blue>func</font>(*PoConfig) " #.. "compile.PoOption"
"compile.<font color=blue>map</font>[string]properties" #.. "compile.CSSClassesHighlighting"
"compile.HighlightCSSProperties" #.. "compile.properties"
"compile.HighlightColor" #.. "compile.hcolor"
"compile.utilEndianness" #.. "compile.Endianness"
@enduml
