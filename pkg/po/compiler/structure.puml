@startuml
namespace compiler {
    interface Compiler  {
        + ToWriter( io.Writer) error
        + ToFile( string) error
        + ToString() string
        + ToBytes() []byte

    }
    class MoCompiler << (S,Aquamarine) >> {
        + File *po.File
        + Config MoConfig

        - createBinary() ([]byte, error)

        + ToWriter(w io.Writer) error
        + ToFile(f string) error
        + ToString() string
        + ToBytes() []byte

    }
    class MoConfig << (S,Aquamarine) >> {
        + Logger *log.Logger
        + Verbose bool
        + IgnoreErrors bool

    }
    class PoCompiler << (S,Aquamarine) >> {
        + File *po.File
        + Config PoConfig

        - formatHeader() string
        - formatEntry(t po.Entry) string

        + ToWriter(w io.Writer) error
        + ToFile(f string) error
        + ToString() string
        + ToBytes() []byte

    }
    class PoConfig << (S,Aquamarine) >> {
        + Logger *log.Logger
        + ForcePo bool
        + OmitHeader bool
        + PackageName string
        + CopyrightHolder string
        + ForeignUser bool
        + Title string
        + NoLocation bool
        + AddLocation PoLocationMode
        + MsgstrPrefix string
        + MsgstrSuffix string
        + IgnoreErrors bool
        + Verbose bool

        + Validate() error

    }
    class compiler.MoOption << (T, #FF7700) >>  {
    }
    class compiler.PoLocationMode << (T, #FF7700) >>  {
    }
    class compiler.PoOption << (T, #FF7700) >>  {
    }
}

"compiler.Compiler" <|-- "compiler.MoCompiler"
"compiler.Compiler" <|-- "compiler.PoCompiler"

"__builtin__.string" #.. "compiler.PoLocationMode"
"compiler.<font color=blue>func</font>(*MoConfig) " #.. "compiler.MoOption"
"compiler.<font color=blue>func</font>(*PoConfig) " #.. "compiler.PoOption"
@enduml
